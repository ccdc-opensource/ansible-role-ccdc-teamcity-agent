# -*- mode: ruby -*-
# vi: set ft=ruby :

variables = %w{ARTIFACTORY_API_KEY ATLAS_TOKEN VAGRANT_SERVER_URL}
missing = variables.find_all { |v| ENV[v] == nil }
unless missing.empty?
  puts "FATAL: The following environment variables are missing and are needed to run this script: #{missing.join(', ')}."
  puts "See https://ccdc-cambridge.atlassian.net/l/c/W0YRZXRf for instructions on obtaining an artifactory API key and atlas token"
  puts "Make sure export VAGRANT_SERVER_URL='https://artifactory.ccdc.cam.ac.uk/artifactory/api/vagrant/ccdc-vagrant-repo' is present in your .bashrc"
  exit
end

Vagrant.configure("2") do |config|
    config.vm.define "tctest-centos7"
    config.vm.hostname = "tctest-centos7"

    config.vm.box = "ccdc-basebox/centos-7.9"
    # Workaround for bug in artifactory not handling / in package names
    config.vm.box_url = "https://artifactory.ccdc.cam.ac.uk/artifactory/api/vagrant/ccdc-vagrant-repo/ccdc-basebox%2Fcentos-7.9"

    config.vm.provider :virtualbox do |v, override|
        v.gui = true
        v.customize ["modifyvm", :id, "--memory", 4096]
        v.customize ["modifyvm", :id, "--cpus", 4]
        v.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
        v.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
    config.vm.provider :vmware_fusion do |v, override|
        v.gui = true
        v.vmx["memsize"] = "4096"
        v.vmx["numvcpus"] = "4"
        v.enable_vmrun_ip_lookup = false
    end
    
    config.vm.provision "ansible" do |ansible|
      ansible.verbose = "v"
      ansible.playbook = "../playbook.yml"
      ansible.galaxy_role_file = "../../requirements.yml"
      # Download requirements into the downloaded-roles folder
      ansible.galaxy_command = "ansible-galaxy install -p downloaded-roles --role-file=%{role_file} --force"
      # Use both the downloaded roles folder and the roles from git
      ansible.galaxy_roles_path = "../../..:./downloaded-roles" 
    end
end
