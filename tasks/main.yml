---
- name: Install teamcityagent
  win_chocolatey:
    name: teamcityagent
    state: present
    allow_empty_checksums: true
    package_params: "serverUrl={{ teamcity_server_url }} agentName={{ inventory_hostname }} agentDir={{ teamcity_agent_root_directory }} serviceAccount=.\\{{ teamcity_agent_account }} serviceAccountPassword={{ teamcity_agent_account_password }}"
  when: "ansible_os_family == 'Windows'"

- name: Install jre8
  win_chocolatey:
    name: jre8
    state: present
  when: "ansible_os_family == 'Windows'"

- name: Remove generated service (we run this manually)
  win_service:
    name: "{{ inventory_hostname }} TeamCity Build Agent"
    state: absent
  when: "ansible_os_family == 'Windows'"

- name: add full control access to the build user
  win_acl:
    user: ".\{{teamcity_agent_account}}"
    path: "{{teamcity_agent_root_directory}}"
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
  when: "ansible_os_family == 'Windows'"

- name: Create start cmd file
  win_template:
    src: start-tcagent.cmd.j2
    dest: "C:\Users\{{teamcity_agent_account}}\Desktop\start-tcagent.cmd"
  when: "ansible_os_family == 'Windows'"

- name: Create the ps1 file for accessing artefact
  win_template:
    src: tcagent.ps1.j2
    dest: "{{teamcity_agent_root_directory}}\connect-drives-and-start-tcagent.ps1"
  when: "ansible_os_family == 'Windows'"

- name: Create a shortcut to start the agent on login
  win_shortcut:
    src: 'C:\Users\{{teamcity_agent_account}}\Desktop\start-tcagent.cmd'
    dest: 'C:\Users\{{teamcity_agent_account}}\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\StartTeamcityOnLogin.lnk'
    directory: 'C:\Users\{{teamcity_agent_account}}\Desktop\'
  when: "ansible_os_family == 'Windows'"

  - name: Install required packages
  yum: 
    name:
      - xorg-x11-drv-dummy # used with teamcity
      - xeyes # for testing
      state: latest

  - name: Install Java - required by Team City agent
  yum:
    name: java-1.8.0-openjdk
    state: latest

- name: Get the VM Hostname
  shell: hostname
  register: result

- name: Download Agent zip
  get_url:
    url: "http://{{ hostvars.localhost.teamcity_server }}/update/buildAgent.zip"
    dest: /tmp/buildAgent.zip
    mode: 0775
  register: get_url_result

- name: Install each Build Agent
  include_role:
    name: build_agent
  vars:
    agent_index: "{{ item }}"
    build_hostname: "{{ result.stdout }}"
  loop:
    - "01"
    - "02"
    - "03"
    - "04"
  when: get_url_result.changed == True

- name: Automatic buildAgent Start - write init.d file
  template:
    src: teamcity.j2
    dest: /etc/init.d/teamcity
    mode: 0755
    force: no

- name: Automatic buildAgent Start - enable and start service
  service:
    name: teamcity
    enabled: yes
    state: started

- name: Create /home/<user>/builds directory
  file:
    path: "/home/{{ build_username }}/builds/"
    state: directory
    owner: "{{ build_username }}"
    group: programmers

- name: Install autofs
  yum:
    name:
      - autofs
      - nfs-utils
    state: latest
    
- name: Start the autofs service
  service:
    name: autofs
    enabled: yes
    state: started

- name: link /artefact to /net/unix-artefact/volume1/unix2/artefact
  file:
    src: /net/unix-artefact/volume1/unix2/artefact
    dest: /artefact
    owner: "{{ build_username }}"
    group: programmers
    state: link

- name: Write the Xdummy xorg.conf file
  copy:
    src: "{{ role_path }}/files/xorg.conf"
    dest: "/etc/X11/xdummy_xorg.conf"
    owner: root
    group: root
    mode: 0644

- name: Add cron job to start Xdummy on boot
  cron:
    name: "Start Xdummy"
    special_time: reboot
    job: "sleep 60 ; Xorg -noreset +extension GLX +extension RANDR +extension RENDER -config xdummy_xorg.conf :77 >/dev/null 2>&1"
    user: root
  register: xdummy_cron

# Ansible 2.7 includes a reboot module, move to that when possible. 
- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 10
  poll: 0
  when: xdummy_cron is changed

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: xdummy_cron is changed

#############
- homebrew_tap:
    name: AdoptOpenJDK/openjdk
    state: present

- name: Install adoptopenjdk for teamcity agent on MacOS
  homebrew_cask:
    name: adoptopenjdk11
    state: present
  when: ansible_distribution == "MacOSX"

- name: "Create Agent zip directory"
  file:
    path: "{{ local_buildagent_zip_path }}"
    state: directory
    mode: 0755

- name: "Download Agent Package"
  get_url:
    url: "http://{{ teamcity_agent_server_hostname }}:{{ teamcity_agent_server_port }}/update/buildAgent.zip"
    dest: "{{ local_buildagent_zip_path }}"
    validate_certs: no
    timeout: 60
  register: _teamcity_agent_package

- name: "Create Agent directory"
  file:
    path: "{{ teamcity_agent_install_dir }}"
    state: directory
    mode: 0755

- name: "Unpack distribution"
  unarchive:
    src: "{{ local_buildagent_zip_path }}/buildAgent.zip"
    dest: "{{ teamcity_agent_install_dir }}"
    copy: "no"
  when: _teamcity_agent_package is changed

- name: "Save agent auth token"
  shell: "grep authorizationToken {{ teamcity_agent_install_dir }}/conf/buildAgent.properties | sed 's/authorizationToken=//g'"
  changed_when: no
  register: _teamcity_agent_token

- name: "Add TeamCity Agent configuration"
  template:
    src: "buildAgent.properties.j2"
    dest: "{{ teamcity_agent_install_dir }}/conf/buildAgent.properties"
    mode: 0644

- name: "Create log dir"
  file:
    path: "{{ teamcity_agent_install_dir }}/logs"
    state: directory
    mode: 0755

- name: "Create LaunchAgents directory"
  file:
    path: "{{ ansible_env.HOME }}/Library/LaunchAgents/"
    state: directory
    mode: 0755

- name: "Add TeamCity launchd service file"
  template:
    src: jetbrains.teamcity.BuildAgent.plist.j2
    dest: "{{ teamcity_agent_launchd_filename }}"
    mode: 0644

- name: "launchctl load buildagent"
  command: launchctl load "{{teamcity_agent_launchd_filename}}"

#- name: "Put TeamCity Agent service file (systemd)"
#  template:
#    src: "teamcity-agent.service.j2"
#    dest: "/lib/systemd/system/teamcity-agent.service"
#    #mode: 0644
#  when: "ansible_service_mgr == 'systemd'"
#- name: "Ensure TeamCity Agent is running"
#  service:
#    name: teamcity-agent
#    state: started
#    enabled: yes